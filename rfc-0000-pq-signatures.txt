



Network Working Group                                   G. C. F. Pereira
Internet-Draft                                 evolutionQ Inc. / IQC, UW
Updates: 3279 (if approved)                                     B. Neill
Intended status: Standards Track                         evolutionQ Inc.
Expires: December 25, 2019                                  Jun 23, 2019


   Internet X.509 Public Key Infrastructure: Additional Post-Quantum
                          Signature Algorithms
                   draft-pereira-certificate-stack-00

Abstract

   This document updates RFC 3279 to specify algorithm identifiers and
   ASN.1 encoding rules for the selected Post-Quantum Digital Signature
   Algorithms in the NIST standardization process [NIST] when using SHA3
   as the hashing algorithm.  This specification applies to the Internet
   X.509 Public Key infrastructure (PKI) when digital signatures are
   used to sign certificates and certificate revocation lists (CRLs).
   This document also identifies all four SHA3 hash algorithms for use
   in the Internet X.509 PKI.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on December 25, 2019.

Copyright Notice

   Copyright (c) 2019 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents



C. F. Pereira & Neill   Expires December 25, 2019               [Page 1]

Internet-Draft            pereira-stacked-certs                 Jun 2019


   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Hash Functions  . . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Post-quantum Digital Signature Algorithms . . . . . . . . . .   3
     3.1.  CRYSTALS-Dilithium Signatures . . . . . . . . . . . . . .   4
     3.2.  FALCON Signatures . . . . . . . . . . . . . . . . . . . .   4
     3.3.  GeMSS Signatures  . . . . . . . . . . . . . . . . . . . .   5
     3.4.  LUOV Signatures . . . . . . . . . . . . . . . . . . . . .   5
     3.5.  MQDSS Signatures  . . . . . . . . . . . . . . . . . . . .   6
     3.6.  PICNIC Signatures . . . . . . . . . . . . . . . . . . . .   6
     3.7.  qTesla Signatures . . . . . . . . . . . . . . . . . . . .   7
     3.8.  Rainbow Signatures  . . . . . . . . . . . . . . . . . . .   7
     3.9.  Sphincs+ Signatures . . . . . . . . . . . . . . . . . . .   8
   4.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   8
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  10

1.  Introduction

   This specification defines the contents of the signatureAlgorithm,
   signatureValue, and signature fields within Internet X.509
   certificates and CRLs when these objects are signed using all the
   selected post-quantum digital signature algorithms by the NIST
   process with a SHA3 hash algorithm.  These three fields are further
   described in RFC 5280 [X509].  This document also identifies all
   three SHA3 parameter sets for hashing for use in the Internet X.509
   PKI.  This document profiles material to be standardized by the NIST
   Post-Quantum Cryptography standardization process [NIST].  The object
   identifiers for all the active 9 signature algorithms suggested in
   this document follow the NIST signature tree [NIST-OIDS], in
   particular, the branch joint-iso-itu-t -> country -> us ->
   organization -> gov -> csor -> nistAlgorithm -> sigAlgs.  Note that
   sigAlgs already contain OIDs ranging from 1--4 and 13--16.  We
   adopted OID codes starting from 20 and above for the post-quantum
   signatures.  This document updates RFC 3279 [RFC3279] Sections 2.1,
   2.2.2, and 2.2.3.  Note that RFC 5480 [RFC5480] updates Sections
   2.3.5, 3 (ASN.1 Module), and 5 (Security Considerations) of RFC 3279.







C. F. Pereira & Neill   Expires December 25, 2019               [Page 2]

Internet-Draft            pereira-stacked-certs                 Jun 2019


1.1.  Terminology

   o  NIST: National Institute of Standards and Technology.

   o  XOF: eXtendable-Output hash Function

2.  Hash Functions

   This section identifies three possible hash algorithms for use with
   post-quantum digital signature algorithms in the Internet X.509
   certificate and CRL profile [X509].  SHA3-256, SHA3-384, SHAKE-128
   and SHAKE-256 produce a 256-bit, 384-bit and a extendable output
   "hash" of the input, respectively, and are fully described in the
   "Secure Hash Standard" [FIPS202].  It is important to note that most
   of the signature candidates in NIST process adopt SHAKE which is the
   variant of eXtendable-Output hash Function (XOF) of SHA3 [FIPS202].
   The object identifiers for SHAKE are retrieved from [NIST-OIDS].  The
   listed one-way hash functions are identified by the following object
   identifiers (OIDs):

   id-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16)
   us(840) organization(1) gov(101) csor(3) nistAlgorithm(4) hashAlgs(2)
   8 }

   id-sha3-384 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16)
   us(840) organization(1) gov(101) csor(3) nistAlgorithm(4) hashAlgs(2)
   9 }

   id-shake128 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16)
   us(840) organization(1) gov(101) csor(3) nistAlgorithm(4) hashAlgs(2)
   11} }

   id-shake256 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16)
   us(840) organization(1) gov(101) csor(3) nistAlgorithm(4) hashAlgs(2)
   12} }

   When one of these OIDs appears in an AlgorithmIdentifier, all
   implementations MUST accept both NULL and absent parameters as legal
   and equivalent encodings.  Conforming certification authority (CA)
   implementations SHOULD use SHA-256, SHA-384, SHAKE-128 or SHAKE-256
   when generating certificates or CRLs, but MAY use SHA-1 if they have
   a stated policy that requires the use of this weaker algorithm.

3.  Post-quantum Digital Signature Algorithms

   This section identifies OIDs for and Crystals-Dilithium, Falcon,
   GeMSS, LUOV, MQDSS, Picnic, qTESLA, Rainbow and Sphincs + with
   SHA3-256, SHAKE-128 or SHAKE-256.  The contents of the parameters



C. F. Pereira & Neill   Expires December 25, 2019               [Page 3]

Internet-Draft            pereira-stacked-certs                 Jun 2019


   component for each signature algorithm vary; details are provided for
   each algorithm.

3.1.  CRYSTALS-Dilithium Signatures

   The CRYSTALS-Dilithium is defined in [CRYSTALS-Dilithium].  CRYSTALS-
   Dilithium was also developed by a university-industry cooperation,
   and can be used in conjunction with the SHAKE variant of SHA3.  When
   SHA3-256 is used, the OID is:

   id-dilithium-level1 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-dilithium-with-level1(3) 20 }.

   id-dilithium-level2 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-dilithium-level2(3) 21 }.

   id-dilithium-with-level3 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-dilithium-level3(3) 22 }.

   id-dilithium-with-level4 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-dilithium-level4(3) 23 }.

   When the id-dilithium-with-sha3-256, id-dilithium-with-sha3-384 or
   id-dilithium-with-sha3-512 algorithm identifier appears in the
   algorithm field as an AlgorithmIdentifier, the encoding SHALL omit
   the parameters field.

3.2.  FALCON Signatures

   The FALCON is defined in [FALCON-ref].  FALCON was also developed by
   a university-industry cooperation, and can be used in conjunction
   with a SHA3 hash function such as SHAKE-256.  When SHAKE-256 is used,
   the OIDs are:

   id-falcon-level1 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-falcon-level1(3) 24 }.

   id-falcon-level4 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-falcon-level4(3) 25 }.






C. F. Pereira & Neill   Expires December 25, 2019               [Page 4]

Internet-Draft            pereira-stacked-certs                 Jun 2019


   id-falcon-level5-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-falcon-level5(3) 26 }.

   When the id-falcon-level1, id-falcon-level4 or id-falcon-level5
   algorithm identifier appears in the algorithm field as an
   AlgorithmIdentifier, the encoding SHALL omit the parameters field.

3.3.  GeMSS Signatures

   The GeMSS is defined in [GeMSS-ref].  GeMSS was also developed by a
   university-industry cooperation, and can be used in conjunction with
   a SHA3 hash function such as SHA3-256, SHA3-384, and SHA3-512.  When
   SHA3-256 is used, the OIDs:

   id-gemss-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-gemss-with-sha3(3) 11 }.

   id-gemss-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-gemss-with-sha3(3) 12 }.

   id-gemss-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-gemss-with-sha3(3) 13 }.

   When the id-gemss-with-sha3-256, id-gemss-with-sha3-384 or id-gemss-
   with-sha3-512 algorithm identifier appears in the algorithm field as
   an AlgorithmIdentifier, the encoding SHALL omit the parameters field.

3.4.  LUOV Signatures

   The LUOV is defined in [LUOV].  LUOV was also developed by a
   university-industry cooperation, and can be used in conjunction with
   a SHA3 hash function such as SHA3-256, SHA3-384, and SHA3-512.  When
   SHA3-256 is used, the OID is:

   id-luov-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-luov-with-sha3(3) 14 }.

   id-luov-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-luov-with-sha3(3) 15 }.






C. F. Pereira & Neill   Expires December 25, 2019               [Page 5]

Internet-Draft            pereira-stacked-certs                 Jun 2019


   id-luov-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-luov-with-sha3(3) 16 }.

   When the id-luov-with-sha3-256, id-luov-with-sha3-384 or id-luov-
   with-sha3-512 algorithm identifier appears in the algorithm field as
   an AlgorithmIdentifier, the encoding SHALL omit the parameters field.

3.5.  MQDSS Signatures

   The MQDSS is defined in [MQDSS].  MQDSS was also developed by a
   university-industry cooperation, and can be used in conjunction with
   a SHA3 hash function such as SHA3-256, SHA3-384, and SHA3-512.  When
   SHA3-256 is used, the OID is:

   id-mqdss-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-mqdss-with-sha3(3) 17 }.

   id-mqdss-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-mqdss-with-sha3(3) 18 }.

   id-mqdss-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-mqdss-with-sha3(3) 19 }.

   When the id-mqdss-with-sha3-256, id-mqdss-with-sha3-384 or id-mqdss-
   with-sha3-512 algorithm identifier appears in the algorithm field as
   an AlgorithmIdentifier, the encoding SHALL omit the parameters field.

3.6.  PICNIC Signatures

   The PICNIC is defined in [PICNIC].  PICNIC was developed by a
   university-industry cooperation, and can be used in conjunction with
   a SHA3 hash function such as SHA3-256, SHA3-384, and SHA3-512.  When
   SHA3-256 is used, the OID is:

   id-picnic-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-picnic-with-sha3(3) 20 }.

   id-picnic-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-picnic-with-sha3(3) 21 }.






C. F. Pereira & Neill   Expires December 25, 2019               [Page 6]

Internet-Draft            pereira-stacked-certs                 Jun 2019


   id-picnic-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-picnic-with-sha3(3) 22 }.

   When the id-picnic-with-sha3-256, id-picnic-with-sha3-384 or id-
   picnic-with-sha3-512 algorithm identifier appears in the algorithm
   field as an AlgorithmIdentifier, the encoding SHALL omit the
   parameters field.

3.7.  qTesla Signatures

   The qTesla is defined in [qTesla].  qTesla was also developed by a
   university-industry cooperation, and can be used in conjunction with
   a SHA3 hash function such as SHA3-256, SHA3-384, and SHA3-512.  When
   SHA3-256 is used, the OID is:

   id-qtesla-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-qtesla-with-sha3(3) 23 }.

   id-qtesla-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-qtesla-with-sha3(3) 24 }.

   id-qtesla-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-qtesla-with-sha3(3) 25 }.

   When the id-qtesla-with-sha3-256, id-qtesla-with-sha3-384 or id-
   qtesla-with-sha3-512 algorithm identifier appears in the algorithm
   field as an AlgorithmIdentifier, the encoding SHALL omit the
   parameters field.

3.8.  Rainbow Signatures

   The Rainbow is defined in [RAINBOW].  Rainbow was also developed by a
   university-industry cooperation, and can be used in conjunction with
   a SHA3 hash function such as SHA3-256, SHA3-384, and SHA3-512.  When
   SHA3-256 is used, the OID is:

   id-rainbow-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-rainbow-with-sha3(3) 26 }.

   id-rainbow-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-rainbow-with-sha3(3) 27 }.




C. F. Pereira & Neill   Expires December 25, 2019               [Page 7]

Internet-Draft            pereira-stacked-certs                 Jun 2019


   id-rainbow-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-rainbow-with-sha3(3) 28 }.

   When the id-rainbow-with-sha3-256, id-rainbow-with-sha3-384 or id-
   rainbow-with-sha3-512 algorithm identifier appears in the algorithm
   field as an AlgorithmIdentifier, the encoding SHALL omit the
   parameters field.

3.9.  Sphincs+ Signatures

   The Sphincs+ is defined in [SPHINCS_P].  Sphincs+ was also developed
   by a university-industry cooperation, and can be used in conjunction
   with a SHA3 hash function such as SHA3-256, SHA3-384, and SHA3-512.
   When SHA3-256 is used, the OID is:

   id-sphincs_p-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-sphincs_p-with-sha3(3) 29 }.

   id-sphincs_p-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-sphincs_p-with-sha3(3) 30 }.

   id-sphincs_p-with-sha3-256 OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)
   country(16) us(840) organization(1) gov(101) csor(3) algorithms(4)
   id-sphincs_p-with-sha3(3) 31 }.

   When the id-sphincs_p-with-sha3-256, id-sphincs_p-with-sha3-384 or
   id-sphincs_p-with-sha3-512 algorithm identifier appears in the
   algorithm field as an AlgorithmIdentifier, the encoding SHALL omit
   the parameters field.

4.  References

   [CRYSTALS-Dilithium]
              Ducas, L., Kiltz, E., Lepoint, T., Lyubashevsky, V.,
              Schwabe, P., Seiler, G., and D. Stehle, "Crystals-
              dilithium: A lattice-based digital signature scheme", IACR
              Cryptology ePrint Archive , 2017,
              <https://eprint.iacr.org/2017/633>.

   [FALCON-ref]
              Fouque, P-A., Hoffstein, J., Kirchner, P., Lyubashevsky,
              V., Pornin, T., Prest, T., Ricosset, T., Seiler, G.,
              Whyte, W., and Z. Zhang, "Falcon: Fast-Fourier lattice-
              based compact signatures over NTRU", IACR Cryptology
              ePrint Archive , 2018, <https://falcon-sign.info/>.



C. F. Pereira & Neill   Expires December 25, 2019               [Page 8]

Internet-Draft            pereira-stacked-certs                 Jun 2019


   [GeMSS-ref]
              Casanova, A., Faugere, J-C., Macario-Rat, G., Patarin, J.,
              Perret, L., and J. Ryckeghem, "GeMSS: A Great Multivariate
              Short Signature", 2017,
              <https://www-polsys.lip6.fr/Links/NIST/GeMSS.html>.

   [LUOV]     Beullens, W. and B. Preneel, "LUOV: Field lifting for
              smaller UOV public keys", IACR Cryptology ePrint Archive ,
              2017, <https://eprint.iacr.org/2017/776>.

   [MQDSS]    Hulsing, A., Rijneveld, J., Samardjiska, S., and P.
              Schwabe, "From 5-pass MQ-based identification to MQ-based
              signatures", IACR Cryptology ePrint Archive , 2016,
              <https://eprint.iacr.org/2016/708>.

   [NIST]     National Institute of Standards and Technology (NIST),
              "Post-Quantum Cryptography", n.d.,
              <https://www.nist.gov/pqcrypto>.

   [NIST-OIDS]
              National Institute of Standards and Technology (NIST),
              "Computer Security Objects Register", n.d.,
              <https://csrc.nist.gov/Projects/Computer-Security-Objects-
              Register/Algorithm-Registration>.

   [PICNIC]   Chase, M., Derler, D., Goldfeder, S., Orlandi, C.,
              Ramacher, S., Rechberger, C., Slamanig, D., and G.
              Zaverucha, "Post-quantum zero-knowledge and signatures
              from symmetric-key primitives", ACM SIGSAC Conference on
              Computer and Communications Security pp. 1825--1842,
              DOI 10.1145/3133956.3133997, 2017.

   [qTesla]   Alkim, E., L.M. Barreto, P., Bindel, N., Longa, P., and J.
              E. Ricardini, "The Lattice-Based Digital Signature Scheme
              qTESLA", IACR Cryptology ePrint Archive , 2019,
              <https://eprint.iacr.org/2019/085>.

   [RAINBOW]  Ding, J. and D. Schmidt, "Rainbow, a New Multivariable
              Polynomial Signature Scheme", 2005,
              <https://link.springer.com/chapter/10.1007/11496137_12>.

   [SPHINCS_P]
              Bernstein, D., Dobraunig, C., Eichlseder, M., Fluhrer, S.,
              Gazdag, S-L., Hulsing, A., Kampanakis, P., Kolbl, S.,
              Lange, T., Lauridsen, M., Mendel, F., Niederhagen, R.,
              Rechberger, C., Rijneveld, J., and P. Schwabe, "SPHINCS+",
              2017, <https://sphincs.org/>.




C. F. Pereira & Neill   Expires December 25, 2019               [Page 9]

Internet-Draft            pereira-stacked-certs                 Jun 2019


   [X509]     Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,
              Housley, R., and W. Polk, , RFC 5280,
              DOI 10.17487/RFC5280, May 2008,
              <https://www.rfc-editor.org/info/rfc5280>.

Authors' Addresses

   Geovandro C. C. F. Pereira
   evolutionQ Inc. / IQC, University of Waterloo

   Email: geovandro.pereira@evolutionq.com


   Brian Neill
   evolutionQ Inc.

   Email: brian.neill@evolutionq.com


































C. F. Pereira & Neill   Expires December 25, 2019              [Page 10]
